 // **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2003
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.3
#ifdef _WAMAP_

#include <OB/CORBAClient.h>
#include "warn_service_message.h"

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4010300L)
#       error ORBacus version mismatch!
#   endif
#endif

::OB::TypeCodeConst _tc_SEQ_FIELD_VALUE(
"01ffffff150000002c040000010300001800000049444c3a5345515f4649454c445f56414c554"
"53a312e3000100000005345515f4649454c445f56414c55450013000000f003000001bf124010"
"000000e0030000010000001300000049444c3a554461746156616c75653a312e3000000b00000"
"0554461746156616c7565000002000000ffffffff0e0000000100000009000000635f73747269"
"6e670000000012000000000000000200164008000000635f7563686172000a000000030000000"
"8000000635f73686f727400020000000400000006000000635f696e7400000003000000050000"
"0007000000635f74696d650000030000000600000008000000635f666c6f61740006000000070"
"0000009000000635f646f75626c6500000000070000000800000008000000635f6b6579696400"
"0f00000050000000010000000f00000049444c3a544b657949443a312e30004007000000544b6"
"57949440000020000000a0000007265636f72645f6964000000030000000a000000636f6c756d"
"6e5f6964000000020000000900000009000000635f62696e61727900000000150000007400000"
"0010000001000000049444c3a436861725365713a312e30000800000043686172536571001500"
"000048000000010300001e00000049444c3a6f6d672e6f72672f434f5242412f4368617253657"
"13a312e30001140080000004368617253657100130000000c00000001d6670009000000000000"
"000a00000007000000635f7465787400001500000074000000010300001000000049444c3a436"
"861725365713a312e30000800000043686172536571001500000048000000010000001e000000"
"49444c3a6f6d672e6f72672f434f5242412f436861725365713a312e300000000800000043686"
"17253657100130000000c0000000100000009000000000000000b00000008000000635f696d61"
"6765001500000074000000010000001000000049444c3a436861725365713a312e30000800000"
"043686172536571001500000048000000010300001e00000049444c3a6f6d672e6f72672f434f"
"5242412f436861725365713a312e30000000080000004368617253657100130000000c0000000"
"100000009000000000000000c0000000b000000635f6170706b6579696400000f000000680000"
"00010000001200000049444c3a544170704b657949443a312e3000a0000a000000544170704b6"
"579494400ff1f03000000070000006170705f69640020030000000a0000007265636f72645f69"
"64000000030000000a000000636f6c756d6e5f6964005980020000000d0018c008000000635f6"
"170706964000f0000004c00000001d157800f00000049444c3a5441707049443a312e30000007"
"000000544170704944000002000000070000006170705f6964001f030000000a0000007265636"
"f72645f696400000003000000000000000a000000635f64656661756c74000000090000000000"
"0000"
);

::OB::TypeCodeConst _tc_ONE_WARN_MESSAGE_STRU(
"019556800f00000040050000010000001e00000049444c3a4f4e455f5741524e5f4d455353414"
"7455f535452553a312e30000000160000004f4e455f5741524e5f4d4553534147455f53545255"
"000000090000000a0000007761726e5f7479706500000003000000070000006170705f6e6f004"
"003000000080000006e6f64655f696400030000000c00000069735f726573747261696e000a00"
"0000080000006f705f74797065000a0000001f000000736f756e645f7461626c655f6b65795f6"
"669656c645f6f726465725f6e6f0000030000000d000000726573657276657265645f31000000"
"00030000000d000000726573657276657265645f3200000000030000000f0000007365715f666"
"9656c645f696e666f0000150000002c04000001bd3d001800000049444c3a5345515f4649454c"
"445f56414c55453a312e3000100000005345515f4649454c445f56414c55450013000000f0030"
"0000100000010000000e0030000015316401300000049444c3a554461746156616c75653a312e"
"3000400b000000554461746156616c7565000002000000ffffffff0e0000000100ff1f0900000"
"0635f737472696e670000000012000000000000000200000008000000635f7563686172000a00"
"00000300000008000000635f73686f727400020000000400000006000000635f696e740018c00"
"30000000500ff1f07000000635f74696d650000030000000600000008000000635f666c6f6174"
"000600000007003c0009000000635f646f75626c650000000007000000080018c008000000635"
"f6b65796964000f0000005000000001d157800f00000049444c3a544b657949443a312e300000"
"07000000544b657949440000020000000a0000007265636f72645f6964000000030000000a000"
"000636f6c756d6e5f6964001340020000000900560009000000635f62696e6172790000000015"
"00000074000000010000001000000049444c3a436861725365713a312e3000080000004368617"
"2536571001500000048000000010000001e00000049444c3a6f6d672e6f72672f434f5242412f"
"436861725365713a312e30000000080000004368617253657100130000000c000000010000000"
"9000000000000000a00084007000000635f7465787400001500000074000000013d0740100000"
"0049444c3a436861725365713a312e30000800000043686172536571001500000048000000010"
"000001e00000049444c3a6f6d672e6f72672f434f5242412f436861725365713a312e30000000"
"080000004368617253657100130000000c00000001d95b0009000000000000000b00000008000"
"000635f696d616765001500000074000000010300001000000049444c3a436861725365713a31"
"2e3000080000004368617253657100150000004800000001bd3d001e00000049444c3a6f6d672"
"e6f72672f434f5242412f436861725365713a312e300000000800000043686172536571001300"
"00000c0000000100000009000000000000000c0000000b000000635f6170706b6579696400000"
"f00000068000000010300001200000049444c3a544170704b657949443a312e300000000a0000"
"00544170704b6579494400000003000000070000006170705f69640000030000000a000000726"
"5636f72645f6964003635030000000a000000636f6c756d6e5f6964003030020000000d003030"
"08000000635f6170706964000f0000004c000000013732650f00000049444c3a5441707049443"
"a312e30006607000000544170704944003502000000070000006170705f69640030030000000a"
"0000007265636f72645f696400363503000000000030300a000000635f64656661756c7400303"
"00900000000000000"
);

::OB::TypeCodeConst _tc_SEQ_WARN_MESSAGE_TYPE(
"01ffffff150000009c050000010300001e00000049444c3a5345515f5741524e5f4d455353414"
"7455f545950453a312e30000000160000005345515f5741524e5f4d4553534147455f54595045"
"0000001300000050050000013d07400f00000040050000010000001e00000049444c3a4f4e455"
"f5741524e5f4d4553534147455f535452553a312e30001640160000004f4e455f5741524e5f4d"
"4553534147455f53545255000000090000000a0000007761726e5f74797065000000030000000"
"70000006170705f6e6f004003000000080000006e6f64655f696400030000000c00000069735f"
"726573747261696e000a000000080000006f705f74797065000a0000001f000000736f756e645"
"f7461626c655f6b65795f6669656c645f6f726465725f6e6f0000030000000d00000072657365"
"7276657265645f3100000000030000000d000000726573657276657265645f320000000003000"
"0000f0000007365715f6669656c645f696e666f0000150000002c040000010000001800000049"
"444c3a5345515f4649454c445f56414c55453a312e3000100000005345515f4649454c445f564"
"14c55450013000000f00300000100000010000000e0030000010000001300000049444c3a5544"
"61746156616c75653a312e3000000b000000554461746156616c7565004002000000ffffffff0"
"e0000000100114009000000635f737472696e6700f90a40120000000000000002000000080000"
"00635f7563686172000a000000030018c008000000635f73686f7274000200000004000000060"
"00000635f696e74000000030000000500000007000000635f74696d6500000300000006000000"
"08000000635f666c6f617400060000000700000009000000635f646f75626c6500112a0007000"
"0000800000008000000635f6b65796964000f00000050000000013d07400f00000049444c3a54"
"4b657949443a312e30000007000000544b657949440040020000000a0000007265636f72645f6"
"964000000030000000a000000636f6c756d6e5f6964005600020000000900144009000000635f"
"62696e617279002d06401500000074000000010000001000000049444c3a436861725365713a3"
"12e3000080000004368617253657100150000004800000001cb37001e00000049444c3a6f6d67"
"2e6f72672f434f5242412f436861725365713a312e30000000080000004368617253657100130"
"000000c0000000100000009000000000000000a002a0007000000635f74657874000015000000"
"74000000013d07401000000049444c3a436861725365713a312e3000080000004368617253657"
"1001500000048000000010000001e00000049444c3a6f6d672e6f72672f434f5242412f436861"
"725365713a312e30000000080000004368617253657100130000000c000000010000000900000"
"0000000000b00000008000000635f696d61676500150000007400000001000000100000004944"
"4c3a436861725365713a312e30000800000043686172536571001500000048000000010000001"
"e00000049444c3a6f6d672e6f72672f434f5242412f436861725365713a312e30000000080000"
"004368617253657100130000000c0000000103000009000000000000000c000a200b000000635"
"f6170706b6579696400350f00000068000000016f6c751200000049444c3a544170704b657949"
"443a312e300061700a000000544170704b6579494400326503000000070000006170705f69640"
"031030000000a0000007265636f72645f6964000000030000000a000000636f6c756d6e5f6964"
"000000020000000d005f6908000000635f6170706964000f0000004c0000000161756c0f00000"
"049444c3a5441707049443a312e30003007000000544170704944003002000000070000006170"
"705f69640064030000000a0000007265636f72645f696400303003000000000030300a0000006"
"35f64656661756c74003434090000000000000000000000"
);

::OB::TypeCodeConst _tc_APP_TO_WARN_SERVICE_MESSAGE_STRU(
"019556800f00000030060000010000002900000049444c3a4150505f544f5f5741524e5f53455"
"2564943455f4d4553534147455f535452553a312e3000000000210000004150505f544f5f5741"
"524e5f534552564943455f4d4553534147455f535452550000000002000000090000007761726"
"e5f6e756d0060012003000000110000007365715f7761726e5f6d657373616765000000001500"
"00009c05000001b03d001e00000049444c3a5345515f5741524e5f4d4553534147455f5459504"
"53a312e30000000160000005345515f5741524e5f4d4553534147455f54595045001340130000"
"005005000001696e000f00000040050000010000001e00000049444c3a4f4e455f5741524e5f4"
"d4553534147455f535452553a312e30000000160000004f4e455f5741524e5f4d455353414745"
"5f53545255005f31090000000a0000007761726e5f74797065006572030000000700000061707"
"05f6e6f000003000000080000006e6f64655f696400030000000c00000069735f726573747261"
"696e000a000000080000006f705f74797065000a0000001f000000736f756e645f7461626c655"
"f6b65795f6669656c645f6f726465725f6e6f0000030000000d00000072657365727665726564"
"5f3100000000030000000d000000726573657276657265645f3200000000030000000f0000007"
"365715f6669656c645f696e666f0000150000002c040000010000001800000049444c3a534551"
"5f4649454c445f56414c55453a312e3000100000005345515f4649454c445f56414c554500130"
"00000f00300000100000010000000e0030000010000001300000049444c3a554461746156616c"
"75653a312e3000000b000000554461746156616c7565000002000000ffffffff0e00000001000"
"00009000000635f737472696e670000000012000000000000000200074008000000635f756368"
"6172000a0000000300000008000000635f73686f727400020000000400000006000000635f696"
"e74000000030000000500000007000000635f74696d650000030000000600144008000000635f"
"666c6f617400060000000700000009000000635f646f75626c650003000007000000080000000"
"8000000635f6b65796964000f00000050000000010000000f00000049444c3a544b657949443a"
"312e30004007000000544b657949440000020000000a0000007265636f72645f696400ffff030"
"000000a000000636f6c756d6e5f6964000000020000000900000009000000635f62696e617279"
"000000001500000074000000010000001000000049444c3a436861725365713a312e300008000"
"00043686172536571001500000048000000010300001e00000049444c3a6f6d672e6f72672f43"
"4f5242412f436861725365713a312e30001340080000004368617253657100130000000c00000"
"0011c0d8009000000000000000a00000007000000635f74657874001f15000000740000000100"
"00001000000049444c3a436861725365713a312e3000080000004368617253657100150000004"
"8000000016e08c01e00000049444c3a6f6d672e6f72672f434f5242412f436861725365713a31"
"2e30000000080000004368617253657100130000000c0000000100000009000000000000000b0"
"0ff1f08000000635f696d616765001500000074000000010000001000000049444c3a43686172"
"5365713a312e30000800000043686172536571001500000048000000010000001e00000049444"
"c3a6f6d672e6f72672f434f5242412f436861725365713a312e30000000080000004368617253"
"657100130000000c0000000100000009000000000000000c0000000b000000635f6170706b657"
"96964003a0f00000068000000013000301200000049444c3a544170704b657949443a312e3000"
"705f0a000000544170704b6579494400636f03000000070000006170705f69640030030000000"
"a0000007265636f72645f6964000000030000000a000000636f6c756d6e5f6964003265020000"
"000d00303008000000635f6170706964000f0000004c000000013530300f00000049444c3a544"
"1707049443a312e30003007000000544170704944003402000000070000006170705f69640032"
"030000000a0000007265636f72645f696400363803000000000036350a000000635f646566617"
"56c74003030090000000000000000000000"
);

::OB::TypeCodeConst _tc_ONE_WARN_DW_MESSAGE_STRU(
"019556800f000000b4000000010000002100000049444c3a4f4e455f5741524e5f44575f4d455"
"3534147455f535452553a312e3000000000190000004f4e455f5741524e5f44575f4d45535341"
"47455f5354525500030000010000000600000079785f69640000000f0000005000000001f1084"
"00f00000049444c3a544b657949443a312e30000007000000544b657949440000020000000a00"
"00007265636f72645f6964000000030000000a000000636f6c756d6e5f696400000002000000"
);

::OB::TypeCodeConst _tc_SEQ_DW_MESSAGE_TYPE(
"01ffffff1500000008010000010300001c00000049444c3a5345515f44575f4d4553534147455"
"f545950453a312e3000140000005345515f44575f4d4553534147455f545950450013000000c4"
"000000010000000f000000b4000000010000002100000049444c3a4f4e455f5741524e5f44575"
"f4d4553534147455f535452553a312e3000000000190000004f4e455f5741524e5f44575f4d45"
"53534147455f5354525500030000010000000600000079785f69640000000f000000500000000"
"12e3e000f00000049444c3a544b657949443a312e30000007000000544b657949440040020000"
"000a0000007265636f72645f6964000000030000000a000000636f6c756d6e5f6964000000020"
"0000000000000"
);

::OB::TypeCodeConst _tc_WARN_DW_SERVICE_MESSAGE_STRU(
"019556800f000000ac010000010000002500000049444c3a5741524e5f44575f5345525649434"
"55f4d4553534147455f535452553a312e30002d06401d0000005741524e5f44575f5345525649"
"43455f4d4553534147455f5354525500000000030000001400000069735f66726f6d5f7761726"
"e5f77696e646f77000a0000000700000064775f6e756d004003000000140000007365715f6477"
"5f7761726e5f6d657373616765001500000008010000010000001c00000049444c3a5345515f4"
"4575f4d4553534147455f545950453a312e3000140000005345515f44575f4d4553534147455f"
"545950450013000000c4000000010000000f000000b4000000016f6c752100000049444c3a4f4"
"e455f5741524e5f44575f4d4553534147455f535452553a312e3000e82a00190000004f4e455f"
"5741524e5f44575f4d4553534147455f5354525500000000010000000600000079785f6964001"
"1400f00000050000000010300000f00000049444c3a544b657949443a312e30001f0700000054"
"4b657949440000020000000a0000007265636f72645f696400ff1f030000000a000000636f6c7"
"56d6e5f69640000000200000000000000"
);

//
// IDL:SEQ_FIELD_VALUE:1.0
//
void
OBInfo_SEQ_FIELD_VALUE::marshal(const void* _ob_v, OB::OutputStreamImpl* _ob_out) const
{
    const ::SEQ_FIELD_VALUE& _ob_seq = *(const ::SEQ_FIELD_VALUE*)_ob_v;
    ::CORBA::ULong _ob_len0 = _ob_seq.length();
    _ob_out -> write_ulong(_ob_len0);
    ::UDataValue const * _ob_buf0 = _ob_seq.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        _ob_buf0[_ob_i0]._OB_marshal(_ob_out);
    }
}

void
OBInfo_SEQ_FIELD_VALUE::unmarshal(void* _ob_v, OB::InputStreamImpl* _ob_in) const
{
    ::SEQ_FIELD_VALUE& _ob_seq = *(::SEQ_FIELD_VALUE*)_ob_v;
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_seq.length(_ob_len0);
    ::UDataValue * _ob_buf0 = _ob_seq.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::UDataValue::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
}

void
operator<<=(::CORBA::Any& any, SEQ_FIELD_VALUE* v)
{
    static const OBInfo_SEQ_FIELD_VALUE info;
    any.replace(_tc_SEQ_FIELD_VALUE, v, true, &info);
}

void
operator<<=(::CORBA::Any& any, const SEQ_FIELD_VALUE& v)
{
    any <<= new SEQ_FIELD_VALUE(v);
}

::CORBA::Boolean
operator>>=(const ::CORBA::Any& any, const SEQ_FIELD_VALUE*& v)
{
    if(any.check_type(_tc_SEQ_FIELD_VALUE))
    {
        if(!any.info())
        {
            OB::InputStream_var _ob_in = any.create_input_stream();
            SEQ_FIELD_VALUE* val = new SEQ_FIELD_VALUE;
            ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
            (*val).length(_ob_len0);
            ::UDataValue * _ob_buf0 = (*val).get_buffer();
            for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
            {
                ::UDataValue::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
            }
            (::CORBA::Any&)any <<= val;
        }

        v = (SEQ_FIELD_VALUE*)any.value();
        return true;
    }
    else
        return false;
}

//
// IDL:ONE_WARN_MESSAGE_STRU:1.0
//
#ifdef OB_CLEAR_MEM
ONE_WARN_MESSAGE_STRU::ONE_WARN_MESSAGE_STRU()
{
    memset(&warn_type, 0, sizeof(warn_type));
    memset(&app_no, 0, sizeof(app_no));
    memset(&node_id, 0, sizeof(node_id));
    memset(&is_restrain, 0, sizeof(is_restrain));
    memset(&op_type, 0, sizeof(op_type));
    memset(&sound_table_key_field_order_no, 0, sizeof(sound_table_key_field_order_no));
    memset(&reservered_1, 0, sizeof(reservered_1));
    memset(&reservered_2, 0, sizeof(reservered_2));
}
#endif

ONE_WARN_MESSAGE_STRU::ONE_WARN_MESSAGE_STRU(const ONE_WARN_MESSAGE_STRU& _ob_a)
    : warn_type(_ob_a.warn_type),
      app_no(_ob_a.app_no),
      node_id(_ob_a.node_id),
      is_restrain(_ob_a.is_restrain),
      op_type(_ob_a.op_type),
      sound_table_key_field_order_no(_ob_a.sound_table_key_field_order_no),
      reservered_1(_ob_a.reservered_1),
      reservered_2(_ob_a.reservered_2),
      seq_field_info(_ob_a.seq_field_info)
{
}

ONE_WARN_MESSAGE_STRU&
ONE_WARN_MESSAGE_STRU::operator=(const ONE_WARN_MESSAGE_STRU& _ob_a)
{
    if(this != &_ob_a)
    {
        warn_type = _ob_a.warn_type;
        app_no = _ob_a.app_no;
        node_id = _ob_a.node_id;
        is_restrain = _ob_a.is_restrain;
        op_type = _ob_a.op_type;
        sound_table_key_field_order_no = _ob_a.sound_table_key_field_order_no;
        reservered_1 = _ob_a.reservered_1;
        reservered_2 = _ob_a.reservered_2;
        seq_field_info = _ob_a.seq_field_info;
    }
    return *this;
}

void
ONE_WARN_MESSAGE_STRU::_OB_marshal(OB::OutputStreamImpl* _ob_out) const
{
    _ob_out -> write_long(warn_type);
    _ob_out -> write_long(app_no);
    _ob_out -> write_long(node_id);
    _ob_out -> write_octet(is_restrain);
    _ob_out -> write_octet(op_type);
    _ob_out -> write_long(sound_table_key_field_order_no);
    _ob_out -> write_long(reservered_1);
    _ob_out -> write_long(reservered_2);
    ::CORBA::ULong _ob_len0 = seq_field_info.length();
    _ob_out -> write_ulong(_ob_len0);
    ::UDataValue const * _ob_buf0 = seq_field_info.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        _ob_buf0[_ob_i0]._OB_marshal(_ob_out);
    }
}

void
ONE_WARN_MESSAGE_STRU::_OB_unmarshal(ONE_WARN_MESSAGE_STRU& _ob_v, OB::InputStreamImpl* _ob_in)
{
    _ob_v.warn_type = _ob_in -> read_long();
    _ob_v.app_no = _ob_in -> read_long();
    _ob_v.node_id = _ob_in -> read_long();
    _ob_v.is_restrain = _ob_in -> read_octet();
    _ob_v.op_type = _ob_in -> read_octet();
    _ob_v.sound_table_key_field_order_no = _ob_in -> read_long();
    _ob_v.reservered_1 = _ob_in -> read_long();
    _ob_v.reservered_2 = _ob_in -> read_long();
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_v.seq_field_info.length(_ob_len0);
    ::UDataValue * _ob_buf0 = _ob_v.seq_field_info.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::UDataValue::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
}

void
operator<<=(::CORBA::Any& any, ONE_WARN_MESSAGE_STRU* v)
{
    static const OB::Info< ONE_WARN_MESSAGE_STRU > info;
    any.replace(_tc_ONE_WARN_MESSAGE_STRU, v, true, &info);
}

void
operator<<=(::CORBA::Any& any, const ONE_WARN_MESSAGE_STRU& v)
{
    any <<= new ONE_WARN_MESSAGE_STRU(v);
}

::CORBA::Boolean
operator>>=(const ::CORBA::Any& any, const ONE_WARN_MESSAGE_STRU*& v)
{
    if(any.check_type(_tc_ONE_WARN_MESSAGE_STRU))
    {
        if(!any.info())
        {
            OB::InputStream_var _ob_in = any.create_input_stream();
            ONE_WARN_MESSAGE_STRU* val = new ONE_WARN_MESSAGE_STRU;
            ONE_WARN_MESSAGE_STRU::_OB_unmarshal(*val, _ob_in);
            (::CORBA::Any&)any <<= val;
        }

        v = (ONE_WARN_MESSAGE_STRU*)any.value();
        return true;
    }
    else
        return false;
}

//
// IDL:SEQ_WARN_MESSAGE_TYPE:1.0
//
void
OBInfo_SEQ_WARN_MESSAGE_TYPE::marshal(const void* _ob_v, OB::OutputStreamImpl* _ob_out) const
{
    const ::SEQ_WARN_MESSAGE_TYPE& _ob_seq = *(const ::SEQ_WARN_MESSAGE_TYPE*)_ob_v;
    ::CORBA::ULong _ob_len0 = _ob_seq.length();
    _ob_out -> write_ulong(_ob_len0);
    ::ONE_WARN_MESSAGE_STRU const * _ob_buf0 = _ob_seq.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        _ob_buf0[_ob_i0]._OB_marshal(_ob_out);
    }
}

void
OBInfo_SEQ_WARN_MESSAGE_TYPE::unmarshal(void* _ob_v, OB::InputStreamImpl* _ob_in) const
{
    ::SEQ_WARN_MESSAGE_TYPE& _ob_seq = *(::SEQ_WARN_MESSAGE_TYPE*)_ob_v;
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_seq.length(_ob_len0);
    ::ONE_WARN_MESSAGE_STRU * _ob_buf0 = _ob_seq.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::ONE_WARN_MESSAGE_STRU::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
}

void
operator<<=(::CORBA::Any& any, SEQ_WARN_MESSAGE_TYPE* v)
{
    static const OBInfo_SEQ_WARN_MESSAGE_TYPE info;
    any.replace(_tc_SEQ_WARN_MESSAGE_TYPE, v, true, &info);
}

void
operator<<=(::CORBA::Any& any, const SEQ_WARN_MESSAGE_TYPE& v)
{
    any <<= new SEQ_WARN_MESSAGE_TYPE(v);
}

::CORBA::Boolean
operator>>=(const ::CORBA::Any& any, const SEQ_WARN_MESSAGE_TYPE*& v)
{
    if(any.check_type(_tc_SEQ_WARN_MESSAGE_TYPE))
    {
        if(!any.info())
        {
            OB::InputStream_var _ob_in = any.create_input_stream();
            SEQ_WARN_MESSAGE_TYPE* val = new SEQ_WARN_MESSAGE_TYPE;
            ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
            (*val).length(_ob_len0);
            ::ONE_WARN_MESSAGE_STRU * _ob_buf0 = (*val).get_buffer();
            for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
            {
                ::ONE_WARN_MESSAGE_STRU::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
            }
            (::CORBA::Any&)any <<= val;
        }

        v = (SEQ_WARN_MESSAGE_TYPE*)any.value();
        return true;
    }
    else
        return false;
}

//
// IDL:APP_TO_WARN_SERVICE_MESSAGE_STRU:1.0
//
#ifdef OB_CLEAR_MEM
APP_TO_WARN_SERVICE_MESSAGE_STRU::APP_TO_WARN_SERVICE_MESSAGE_STRU()
{
    memset(&warn_num, 0, sizeof(warn_num));
}
#endif

APP_TO_WARN_SERVICE_MESSAGE_STRU::APP_TO_WARN_SERVICE_MESSAGE_STRU(const APP_TO_WARN_SERVICE_MESSAGE_STRU& _ob_a)
    : warn_num(_ob_a.warn_num),
      seq_warn_message(_ob_a.seq_warn_message)
{
}

APP_TO_WARN_SERVICE_MESSAGE_STRU&
APP_TO_WARN_SERVICE_MESSAGE_STRU::operator=(const APP_TO_WARN_SERVICE_MESSAGE_STRU& _ob_a)
{
    if(this != &_ob_a)
    {
        warn_num = _ob_a.warn_num;
        seq_warn_message = _ob_a.seq_warn_message;
    }
    return *this;
}

void
APP_TO_WARN_SERVICE_MESSAGE_STRU::_OB_marshal(OB::OutputStreamImpl* _ob_out) const
{
    _ob_out -> write_long(warn_num);
    ::CORBA::ULong _ob_len0 = seq_warn_message.length();
    _ob_out -> write_ulong(_ob_len0);
    ::ONE_WARN_MESSAGE_STRU const * _ob_buf0 = seq_warn_message.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        _ob_buf0[_ob_i0]._OB_marshal(_ob_out);
    }
}

void
APP_TO_WARN_SERVICE_MESSAGE_STRU::_OB_unmarshal(APP_TO_WARN_SERVICE_MESSAGE_STRU& _ob_v, OB::InputStreamImpl* _ob_in)
{
    _ob_v.warn_num = _ob_in -> read_long();
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_v.seq_warn_message.length(_ob_len0);
    ::ONE_WARN_MESSAGE_STRU * _ob_buf0 = _ob_v.seq_warn_message.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::ONE_WARN_MESSAGE_STRU::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
}

void
operator<<=(::CORBA::Any& any, APP_TO_WARN_SERVICE_MESSAGE_STRU* v)
{
    static const OB::Info< APP_TO_WARN_SERVICE_MESSAGE_STRU > info;
    any.replace(_tc_APP_TO_WARN_SERVICE_MESSAGE_STRU, v, true, &info);
}

void
operator<<=(::CORBA::Any& any, const APP_TO_WARN_SERVICE_MESSAGE_STRU& v)
{
    any <<= new APP_TO_WARN_SERVICE_MESSAGE_STRU(v);
}

::CORBA::Boolean
operator>>=(const ::CORBA::Any& any, const APP_TO_WARN_SERVICE_MESSAGE_STRU*& v)
{
    if(any.check_type(_tc_APP_TO_WARN_SERVICE_MESSAGE_STRU))
    {
        if(!any.info())
        {
            OB::InputStream_var _ob_in = any.create_input_stream();
            APP_TO_WARN_SERVICE_MESSAGE_STRU* val = new APP_TO_WARN_SERVICE_MESSAGE_STRU;
            APP_TO_WARN_SERVICE_MESSAGE_STRU::_OB_unmarshal(*val, _ob_in);
            (::CORBA::Any&)any <<= val;
        }

        v = (APP_TO_WARN_SERVICE_MESSAGE_STRU*)any.value();
        return true;
    }
    else
        return false;
}

//
// IDL:ONE_WARN_DW_MESSAGE_STRU:1.0
//
void
ONE_WARN_DW_MESSAGE_STRU::_OB_marshal(OB::OutputStreamImpl* _ob_out) const
{
    yx_id._OB_marshal(_ob_out);
}

void
ONE_WARN_DW_MESSAGE_STRU::_OB_unmarshal(ONE_WARN_DW_MESSAGE_STRU& _ob_v, OB::InputStreamImpl* _ob_in)
{
    ::TKeyID::_OB_unmarshal(_ob_v.yx_id, _ob_in);
}

void
operator<<=(::CORBA::Any& any, ONE_WARN_DW_MESSAGE_STRU* v)
{
    static const OB::Info< ONE_WARN_DW_MESSAGE_STRU > info;
    any.replace(_tc_ONE_WARN_DW_MESSAGE_STRU, v, true, &info);
}

void
operator<<=(::CORBA::Any& any, const ONE_WARN_DW_MESSAGE_STRU& v)
{
    any <<= new ONE_WARN_DW_MESSAGE_STRU(v);
}

::CORBA::Boolean
operator>>=(const ::CORBA::Any& any, const ONE_WARN_DW_MESSAGE_STRU*& v)
{
    if(any.check_type(_tc_ONE_WARN_DW_MESSAGE_STRU))
    {
        if(!any.info())
        {
            OB::InputStream_var _ob_in = any.create_input_stream();
            ONE_WARN_DW_MESSAGE_STRU* val = new ONE_WARN_DW_MESSAGE_STRU;
            ONE_WARN_DW_MESSAGE_STRU::_OB_unmarshal(*val, _ob_in);
            (::CORBA::Any&)any <<= val;
        }

        v = (ONE_WARN_DW_MESSAGE_STRU*)any.value();
        return true;
    }
    else
        return false;
}

//
// IDL:SEQ_DW_MESSAGE_TYPE:1.0
//
void
OBInfo_SEQ_DW_MESSAGE_TYPE::marshal(const void* _ob_v, OB::OutputStreamImpl* _ob_out) const
{
    const ::SEQ_DW_MESSAGE_TYPE& _ob_seq = *(const ::SEQ_DW_MESSAGE_TYPE*)_ob_v;
    ::CORBA::ULong _ob_len0 = _ob_seq.length();
    _ob_out -> write_ulong(_ob_len0);
    ::ONE_WARN_DW_MESSAGE_STRU const * _ob_buf0 = _ob_seq.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        _ob_buf0[_ob_i0]._OB_marshal(_ob_out);
    }
}

void
OBInfo_SEQ_DW_MESSAGE_TYPE::unmarshal(void* _ob_v, OB::InputStreamImpl* _ob_in) const
{
    ::SEQ_DW_MESSAGE_TYPE& _ob_seq = *(::SEQ_DW_MESSAGE_TYPE*)_ob_v;
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_seq.length(_ob_len0);
    ::ONE_WARN_DW_MESSAGE_STRU * _ob_buf0 = _ob_seq.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::ONE_WARN_DW_MESSAGE_STRU::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
}

void
operator<<=(::CORBA::Any& any, SEQ_DW_MESSAGE_TYPE* v)
{
    static const OBInfo_SEQ_DW_MESSAGE_TYPE info;
    any.replace(_tc_SEQ_DW_MESSAGE_TYPE, v, true, &info);
}

void
operator<<=(::CORBA::Any& any, const SEQ_DW_MESSAGE_TYPE& v)
{
    any <<= new SEQ_DW_MESSAGE_TYPE(v);
}

::CORBA::Boolean
operator>>=(const ::CORBA::Any& any, const SEQ_DW_MESSAGE_TYPE*& v)
{
    if(any.check_type(_tc_SEQ_DW_MESSAGE_TYPE))
    {
        if(!any.info())
        {
            OB::InputStream_var _ob_in = any.create_input_stream();
            SEQ_DW_MESSAGE_TYPE* val = new SEQ_DW_MESSAGE_TYPE;
            ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
            (*val).length(_ob_len0);
            ::ONE_WARN_DW_MESSAGE_STRU * _ob_buf0 = (*val).get_buffer();
            for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
            {
                ::ONE_WARN_DW_MESSAGE_STRU::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
            }
            (::CORBA::Any&)any <<= val;
        }

        v = (SEQ_DW_MESSAGE_TYPE*)any.value();
        return true;
    }
    else
        return false;
}

//
// IDL:WARN_DW_SERVICE_MESSAGE_STRU:1.0
//
#ifdef OB_CLEAR_MEM
WARN_DW_SERVICE_MESSAGE_STRU::WARN_DW_SERVICE_MESSAGE_STRU()
{
    memset(&is_from_warn_window, 0, sizeof(is_from_warn_window));
    memset(&dw_num, 0, sizeof(dw_num));
}
#endif

WARN_DW_SERVICE_MESSAGE_STRU::WARN_DW_SERVICE_MESSAGE_STRU(const WARN_DW_SERVICE_MESSAGE_STRU& _ob_a)
    : is_from_warn_window(_ob_a.is_from_warn_window),
      dw_num(_ob_a.dw_num),
      seq_dw_warn_message(_ob_a.seq_dw_warn_message)
{
}

WARN_DW_SERVICE_MESSAGE_STRU&
WARN_DW_SERVICE_MESSAGE_STRU::operator=(const WARN_DW_SERVICE_MESSAGE_STRU& _ob_a)
{
    if(this != &_ob_a)
    {
        is_from_warn_window = _ob_a.is_from_warn_window;
        dw_num = _ob_a.dw_num;
        seq_dw_warn_message = _ob_a.seq_dw_warn_message;
    }
    return *this;
}

void
WARN_DW_SERVICE_MESSAGE_STRU::_OB_marshal(OB::OutputStreamImpl* _ob_out) const
{
    _ob_out -> write_octet(is_from_warn_window);
    _ob_out -> write_long(dw_num);
    ::CORBA::ULong _ob_len0 = seq_dw_warn_message.length();
    _ob_out -> write_ulong(_ob_len0);
    ::ONE_WARN_DW_MESSAGE_STRU const * _ob_buf0 = seq_dw_warn_message.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        _ob_buf0[_ob_i0]._OB_marshal(_ob_out);
    }
}

void
WARN_DW_SERVICE_MESSAGE_STRU::_OB_unmarshal(WARN_DW_SERVICE_MESSAGE_STRU& _ob_v, OB::InputStreamImpl* _ob_in)
{
    _ob_v.is_from_warn_window = _ob_in -> read_octet();
    _ob_v.dw_num = _ob_in -> read_long();
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_v.seq_dw_warn_message.length(_ob_len0);
    ::ONE_WARN_DW_MESSAGE_STRU * _ob_buf0 = _ob_v.seq_dw_warn_message.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::ONE_WARN_DW_MESSAGE_STRU::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
}

void
operator<<=(::CORBA::Any& any, WARN_DW_SERVICE_MESSAGE_STRU* v)
{
    static const OB::Info< WARN_DW_SERVICE_MESSAGE_STRU > info;
    any.replace(_tc_WARN_DW_SERVICE_MESSAGE_STRU, v, true, &info);
}

void
operator<<=(::CORBA::Any& any, const WARN_DW_SERVICE_MESSAGE_STRU& v)
{
    any <<= new WARN_DW_SERVICE_MESSAGE_STRU(v);
}

::CORBA::Boolean
operator>>=(const ::CORBA::Any& any, const WARN_DW_SERVICE_MESSAGE_STRU*& v)
{
    if(any.check_type(_tc_WARN_DW_SERVICE_MESSAGE_STRU))
    {
        if(!any.info())
        {
            OB::InputStream_var _ob_in = any.create_input_stream();
            WARN_DW_SERVICE_MESSAGE_STRU* val = new WARN_DW_SERVICE_MESSAGE_STRU;
            WARN_DW_SERVICE_MESSAGE_STRU::_OB_unmarshal(*val, _ob_in);
            (::CORBA::Any&)any <<= val;
        }

        v = (WARN_DW_SERVICE_MESSAGE_STRU*)any.value();
        return true;
    }
    else
        return false;
}
#endif