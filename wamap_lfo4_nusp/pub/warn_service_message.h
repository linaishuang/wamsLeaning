 // **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2003
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.3

#ifndef ___warn_service_message_h__
#define ___warn_service_message_h__

//#include  "d:\users\ems\open2000e\src\include\db_com\public.h"
#include  "public.h"

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4010300L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:SEQ_FIELD_VALUE:1.0
//
class OBUnique_SEQ_FIELD_VALUE { };

typedef OB::VarSeq< ::UDataValue, OBUnique_SEQ_FIELD_VALUE > SEQ_FIELD_VALUE;
typedef OB::SeqVar< OB::VarSeq< ::UDataValue, OBUnique_SEQ_FIELD_VALUE > > SEQ_FIELD_VALUE_var;
typedef OB::SeqOut< OB::VarSeq< ::UDataValue, OBUnique_SEQ_FIELD_VALUE > > SEQ_FIELD_VALUE_out;
extern OB::TypeCodeConst _tc_SEQ_FIELD_VALUE;

struct OBInfo_SEQ_FIELD_VALUE : public OB::ConstructedInfo
{
    OBInfo_SEQ_FIELD_VALUE() { }

    virtual void free(void* p) const
    {
        delete (SEQ_FIELD_VALUE*)p;
    }

    virtual void* dup(const void* p) const
    {
        return new SEQ_FIELD_VALUE(*(const SEQ_FIELD_VALUE*)p);
    }

    virtual void marshal(const void*, OB::OutputStreamImpl*) const;
    virtual void unmarshal(void*, OB::InputStreamImpl*) const;
};

//
// IDL:ONE_WARN_MESSAGE_STRU:1.0
//
struct ONE_WARN_MESSAGE_STRU;
typedef OB::VarVar< ONE_WARN_MESSAGE_STRU > ONE_WARN_MESSAGE_STRU_var;
typedef OB::VarOut< ONE_WARN_MESSAGE_STRU > ONE_WARN_MESSAGE_STRU_out;

struct ONE_WARN_MESSAGE_STRU
{
#ifdef OB_CLEAR_MEM
    ONE_WARN_MESSAGE_STRU();
#else
    ONE_WARN_MESSAGE_STRU() { }
#endif
    ONE_WARN_MESSAGE_STRU(const ONE_WARN_MESSAGE_STRU&);
    ONE_WARN_MESSAGE_STRU& operator=(const ONE_WARN_MESSAGE_STRU&);

    typedef ONE_WARN_MESSAGE_STRU_var _var_type;

    ::CORBA::Long warn_type;
    ::CORBA::Long app_no;
    ::CORBA::Long node_id;
    ::CORBA::Octet is_restrain;
    ::CORBA::Octet op_type;
    ::CORBA::Long sound_table_key_field_order_no;
    ::CORBA::Long reservered_1;
    ::CORBA::Long reservered_2;
    ::SEQ_FIELD_VALUE seq_field_info;

    void _OB_marshal(OB::OutputStreamImpl*) const;
    static void _OB_unmarshal(ONE_WARN_MESSAGE_STRU&, OB::InputStreamImpl*);
};

extern OB::TypeCodeConst _tc_ONE_WARN_MESSAGE_STRU;

//
// IDL:SEQ_WARN_MESSAGE_TYPE:1.0
//
class OBUnique_SEQ_WARN_MESSAGE_TYPE { };

typedef OB::VarSeq< ::ONE_WARN_MESSAGE_STRU, OBUnique_SEQ_WARN_MESSAGE_TYPE > SEQ_WARN_MESSAGE_TYPE;
typedef OB::SeqVar< OB::VarSeq< ::ONE_WARN_MESSAGE_STRU, OBUnique_SEQ_WARN_MESSAGE_TYPE > > SEQ_WARN_MESSAGE_TYPE_var;
typedef OB::SeqOut< OB::VarSeq< ::ONE_WARN_MESSAGE_STRU, OBUnique_SEQ_WARN_MESSAGE_TYPE > > SEQ_WARN_MESSAGE_TYPE_out;
extern OB::TypeCodeConst _tc_SEQ_WARN_MESSAGE_TYPE;

struct OBInfo_SEQ_WARN_MESSAGE_TYPE : public OB::ConstructedInfo
{
    OBInfo_SEQ_WARN_MESSAGE_TYPE() { }

    virtual void free(void* p) const
    {
        delete (SEQ_WARN_MESSAGE_TYPE*)p;
    }

    virtual void* dup(const void* p) const
    {
        return new SEQ_WARN_MESSAGE_TYPE(*(const SEQ_WARN_MESSAGE_TYPE*)p);
    }

    virtual void marshal(const void*, OB::OutputStreamImpl*) const;
    virtual void unmarshal(void*, OB::InputStreamImpl*) const;
};

//
// IDL:APP_TO_WARN_SERVICE_MESSAGE_STRU:1.0
//
struct APP_TO_WARN_SERVICE_MESSAGE_STRU;
typedef OB::VarVar< APP_TO_WARN_SERVICE_MESSAGE_STRU > APP_TO_WARN_SERVICE_MESSAGE_STRU_var;
typedef OB::VarOut< APP_TO_WARN_SERVICE_MESSAGE_STRU > APP_TO_WARN_SERVICE_MESSAGE_STRU_out;

struct APP_TO_WARN_SERVICE_MESSAGE_STRU
{
#ifdef OB_CLEAR_MEM
    APP_TO_WARN_SERVICE_MESSAGE_STRU();
#else
    APP_TO_WARN_SERVICE_MESSAGE_STRU() { }
#endif
    APP_TO_WARN_SERVICE_MESSAGE_STRU(const APP_TO_WARN_SERVICE_MESSAGE_STRU&);
    APP_TO_WARN_SERVICE_MESSAGE_STRU& operator=(const APP_TO_WARN_SERVICE_MESSAGE_STRU&);

    typedef APP_TO_WARN_SERVICE_MESSAGE_STRU_var _var_type;

    ::CORBA::Long warn_num;
    ::SEQ_WARN_MESSAGE_TYPE seq_warn_message;

    void _OB_marshal(OB::OutputStreamImpl*) const;
    static void _OB_unmarshal(APP_TO_WARN_SERVICE_MESSAGE_STRU&, OB::InputStreamImpl*);
};

extern OB::TypeCodeConst _tc_APP_TO_WARN_SERVICE_MESSAGE_STRU;

//
// IDL:ONE_WARN_DW_MESSAGE_STRU:1.0
//
struct ONE_WARN_DW_MESSAGE_STRU;
typedef OB::FixVar< ONE_WARN_DW_MESSAGE_STRU > ONE_WARN_DW_MESSAGE_STRU_var;
typedef ONE_WARN_DW_MESSAGE_STRU& ONE_WARN_DW_MESSAGE_STRU_out;

struct ONE_WARN_DW_MESSAGE_STRU
{
    typedef ONE_WARN_DW_MESSAGE_STRU_var _var_type;

    ::TKeyID yx_id;

    void _OB_marshal(OB::OutputStreamImpl*) const;
    static void _OB_unmarshal(ONE_WARN_DW_MESSAGE_STRU&, OB::InputStreamImpl*);
};

extern OB::TypeCodeConst _tc_ONE_WARN_DW_MESSAGE_STRU;

//
// IDL:SEQ_DW_MESSAGE_TYPE:1.0
//
class OBUnique_SEQ_DW_MESSAGE_TYPE { };

typedef OB::FixSeq< ::ONE_WARN_DW_MESSAGE_STRU, OBUnique_SEQ_DW_MESSAGE_TYPE > SEQ_DW_MESSAGE_TYPE;
typedef OB::SeqVar< OB::FixSeq< ::ONE_WARN_DW_MESSAGE_STRU, OBUnique_SEQ_DW_MESSAGE_TYPE > > SEQ_DW_MESSAGE_TYPE_var;
typedef OB::SeqOut< OB::FixSeq< ::ONE_WARN_DW_MESSAGE_STRU, OBUnique_SEQ_DW_MESSAGE_TYPE > > SEQ_DW_MESSAGE_TYPE_out;
extern OB::TypeCodeConst _tc_SEQ_DW_MESSAGE_TYPE;

struct OBInfo_SEQ_DW_MESSAGE_TYPE : public OB::ConstructedInfo
{
    OBInfo_SEQ_DW_MESSAGE_TYPE() { }

    virtual void free(void* p) const
    {
        delete (SEQ_DW_MESSAGE_TYPE*)p;
    }

    virtual void* dup(const void* p) const
    {
        return new SEQ_DW_MESSAGE_TYPE(*(const SEQ_DW_MESSAGE_TYPE*)p);
    }

    virtual void marshal(const void*, OB::OutputStreamImpl*) const;
    virtual void unmarshal(void*, OB::InputStreamImpl*) const;
};

//
// IDL:WARN_DW_SERVICE_MESSAGE_STRU:1.0
//
struct WARN_DW_SERVICE_MESSAGE_STRU;
typedef OB::VarVar< WARN_DW_SERVICE_MESSAGE_STRU > WARN_DW_SERVICE_MESSAGE_STRU_var;
typedef OB::VarOut< WARN_DW_SERVICE_MESSAGE_STRU > WARN_DW_SERVICE_MESSAGE_STRU_out;

struct WARN_DW_SERVICE_MESSAGE_STRU
{
#ifdef OB_CLEAR_MEM
    WARN_DW_SERVICE_MESSAGE_STRU();
#else
    WARN_DW_SERVICE_MESSAGE_STRU() { }
#endif
    WARN_DW_SERVICE_MESSAGE_STRU(const WARN_DW_SERVICE_MESSAGE_STRU&);
    WARN_DW_SERVICE_MESSAGE_STRU& operator=(const WARN_DW_SERVICE_MESSAGE_STRU&);

    typedef WARN_DW_SERVICE_MESSAGE_STRU_var _var_type;

    ::CORBA::Octet is_from_warn_window;
    ::CORBA::Long dw_num;
    ::SEQ_DW_MESSAGE_TYPE seq_dw_warn_message;

    void _OB_marshal(OB::OutputStreamImpl*) const;
    static void _OB_unmarshal(WARN_DW_SERVICE_MESSAGE_STRU&, OB::InputStreamImpl*);
};

extern OB::TypeCodeConst _tc_WARN_DW_SERVICE_MESSAGE_STRU;

//
// IDL:SEQ_FIELD_VALUE:1.0
//
void operator<<=(::CORBA::Any&, SEQ_FIELD_VALUE*);
void operator<<=(::CORBA::Any&, const SEQ_FIELD_VALUE&);
CORBA::Boolean operator>>=(const ::CORBA::Any&, const SEQ_FIELD_VALUE*&);

inline void
operator<<=(::CORBA::Any_var& any, SEQ_FIELD_VALUE* val)
{
    any.inout() <<= val;
}

inline void
operator<<=(::CORBA::Any_var& any, const SEQ_FIELD_VALUE& val)
{
    any.inout() <<= val;
}

inline ::CORBA::Boolean
operator>>=(const ::CORBA::Any_var& any, const SEQ_FIELD_VALUE*& val)
{
    return any.in() >>= val;
}

//
// IDL:ONE_WARN_MESSAGE_STRU:1.0
//
void operator<<=(::CORBA::Any&, ONE_WARN_MESSAGE_STRU*);
void operator<<=(::CORBA::Any&, const ONE_WARN_MESSAGE_STRU&);
CORBA::Boolean operator>>=(const ::CORBA::Any&, const ONE_WARN_MESSAGE_STRU*&);

inline void
operator<<=(::CORBA::Any_var& any, ONE_WARN_MESSAGE_STRU* val)
{
    any.inout() <<= val;
}

inline void
operator<<=(::CORBA::Any_var& any, const ONE_WARN_MESSAGE_STRU& val)
{
    any.inout() <<= val;
}

inline ::CORBA::Boolean
operator>>=(const ::CORBA::Any_var& any, const ONE_WARN_MESSAGE_STRU*& val)
{
    return any.in() >>= val;
}

//
// IDL:SEQ_WARN_MESSAGE_TYPE:1.0
//
void operator<<=(::CORBA::Any&, SEQ_WARN_MESSAGE_TYPE*);
void operator<<=(::CORBA::Any&, const SEQ_WARN_MESSAGE_TYPE&);
CORBA::Boolean operator>>=(const ::CORBA::Any&, const SEQ_WARN_MESSAGE_TYPE*&);

inline void
operator<<=(::CORBA::Any_var& any, SEQ_WARN_MESSAGE_TYPE* val)
{
    any.inout() <<= val;
}

inline void
operator<<=(::CORBA::Any_var& any, const SEQ_WARN_MESSAGE_TYPE& val)
{
    any.inout() <<= val;
}

inline ::CORBA::Boolean
operator>>=(const ::CORBA::Any_var& any, const SEQ_WARN_MESSAGE_TYPE*& val)
{
    return any.in() >>= val;
}

//
// IDL:APP_TO_WARN_SERVICE_MESSAGE_STRU:1.0
//
void operator<<=(::CORBA::Any&, APP_TO_WARN_SERVICE_MESSAGE_STRU*);
void operator<<=(::CORBA::Any&, const APP_TO_WARN_SERVICE_MESSAGE_STRU&);
CORBA::Boolean operator>>=(const ::CORBA::Any&, const APP_TO_WARN_SERVICE_MESSAGE_STRU*&);

inline void
operator<<=(::CORBA::Any_var& any, APP_TO_WARN_SERVICE_MESSAGE_STRU* val)
{
    any.inout() <<= val;
}

inline void
operator<<=(::CORBA::Any_var& any, const APP_TO_WARN_SERVICE_MESSAGE_STRU& val)
{
    any.inout() <<= val;
}

inline ::CORBA::Boolean
operator>>=(const ::CORBA::Any_var& any, const APP_TO_WARN_SERVICE_MESSAGE_STRU*& val)
{
    return any.in() >>= val;
}

//
// IDL:ONE_WARN_DW_MESSAGE_STRU:1.0
//
void operator<<=(::CORBA::Any&, ONE_WARN_DW_MESSAGE_STRU*);
void operator<<=(::CORBA::Any&, const ONE_WARN_DW_MESSAGE_STRU&);
CORBA::Boolean operator>>=(const ::CORBA::Any&, const ONE_WARN_DW_MESSAGE_STRU*&);

inline void
operator<<=(::CORBA::Any_var& any, ONE_WARN_DW_MESSAGE_STRU* val)
{
    any.inout() <<= val;
}

inline void
operator<<=(::CORBA::Any_var& any, const ONE_WARN_DW_MESSAGE_STRU& val)
{
    any.inout() <<= val;
}

inline ::CORBA::Boolean
operator>>=(const ::CORBA::Any_var& any, const ONE_WARN_DW_MESSAGE_STRU*& val)
{
    return any.in() >>= val;
}

//
// IDL:SEQ_DW_MESSAGE_TYPE:1.0
//
void operator<<=(::CORBA::Any&, SEQ_DW_MESSAGE_TYPE*);
void operator<<=(::CORBA::Any&, const SEQ_DW_MESSAGE_TYPE&);
CORBA::Boolean operator>>=(const ::CORBA::Any&, const SEQ_DW_MESSAGE_TYPE*&);

inline void
operator<<=(::CORBA::Any_var& any, SEQ_DW_MESSAGE_TYPE* val)
{
    any.inout() <<= val;
}

inline void
operator<<=(::CORBA::Any_var& any, const SEQ_DW_MESSAGE_TYPE& val)
{
    any.inout() <<= val;
}

inline ::CORBA::Boolean
operator>>=(const ::CORBA::Any_var& any, const SEQ_DW_MESSAGE_TYPE*& val)
{
    return any.in() >>= val;
}

//
// IDL:WARN_DW_SERVICE_MESSAGE_STRU:1.0
//
void operator<<=(::CORBA::Any&, WARN_DW_SERVICE_MESSAGE_STRU*);
void operator<<=(::CORBA::Any&, const WARN_DW_SERVICE_MESSAGE_STRU&);
CORBA::Boolean operator>>=(const ::CORBA::Any&, const WARN_DW_SERVICE_MESSAGE_STRU*&);

inline void
operator<<=(::CORBA::Any_var& any, WARN_DW_SERVICE_MESSAGE_STRU* val)
{
    any.inout() <<= val;
}

inline void
operator<<=(::CORBA::Any_var& any, const WARN_DW_SERVICE_MESSAGE_STRU& val)
{
    any.inout() <<= val;
}

inline ::CORBA::Boolean
operator>>=(const ::CORBA::Any_var& any, const WARN_DW_SERVICE_MESSAGE_STRU*& val)
{
    return any.in() >>= val;
}

#endif
